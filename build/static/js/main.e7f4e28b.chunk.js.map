{"version":3,"sources":["helpers/format-date.ts","helpers/format-type.ts","components/pokemon-card.tsx","models/mock-pokemon.ts","services/pokemon-service.ts","components/pokemon-search.tsx","pages/pokemon-list.tsx","components/loader.tsx","pages/pokemon-detail.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","models/pokemon.ts","pages/pokemon-add.tsx","services/authentication-service.ts","pages/login.tsx","PrivateRoute.tsx","App.tsx","index.tsx"],"names":["formatDate","date","Date","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","pokemon","borderColor","useState","setColor","history","useHistory","className","onMouseEnter","onMouseLeave","onClick","id","push","style","src","picture","alt","name","created","types","map","key","POKEMONS","hp","cp","PokemonService","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","data","isEmpty","find","method","body","JSON","stringify","headers","index","findIndex","filter","term","includes","Object","keys","length","console","process","PokemonSearch","setTerm","setPokemons","placeholder","value","onChange","e","target","searchPokemon","handleInputChange","to","PokemonList","useEffect","getPokemons","position","bottom","right","Loader","PokemonsDetail","match","setPokemon","getPokemon","params","width","margin","PageNotFound","PokemonForm","isEditForm","isValid","form","setForm","hasType","fieldName","fieldValue","newField","isTypesValid","handleSubmit","preventDefault","newForm","isAddForm","startsWith","endsWith","test","validateForm","updatePokemon","addPokemon","onSubmit","deletePokemon","htmlFor","marginBottom","checked","disabled","concat","currentType","selectType","PokemonEdit","Pokemon","PokemonAdd","getTime","AuthenticationService","username","password","isAuthenticated","setTimeout","Login","message","setMessage","login","PrivateRoute","Component","component","rest","render","props","pathname","App","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e7f4e28b.chunk.js","sourcesContent":["const formatDate = (date: Date = new Date()): string => {\r\n  return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\r\n}\r\n\r\nexport default formatDate;","const formatType = (type: string): string => {\r\n\tlet color: string;\r\n\r\n\tswitch (type) {\r\n\t\tcase 'Feu': \r\n\t\t\tcolor = 'red lighten-1'; \r\n\t\t\tbreak; \r\n\t\tcase 'Eau': \r\n\t\t\tcolor = 'blue lighten-1'; \r\n\t\t\tbreak; \r\n\t\tcase 'Plante': \r\n\t\t\tcolor = 'green lighten-1'; \r\n\t\t\tbreak; \r\n\t\tcase 'Insecte': \r\n\t\t\tcolor = 'brown lighten-1'; \r\n\t\t\tbreak; \r\n\t\tcase 'Normal': \r\n\t\t\tcolor = 'grey lighten-3'; \r\n\t\t\tbreak; \r\n\t\tcase 'Vol': \r\n\t\t\tcolor = 'blue lighten-3'; \r\n\t\t\tbreak; \r\n\t\tcase 'Poison': \r\n\t\t\tcolor = 'deep-purple accent-1'; \r\n\t\t\tbreak; \r\n\t\tcase 'Fée': \r\n\t\t\tcolor = 'pink lighten-4'; \r\n\t\t\tbreak; \r\n\t\tcase 'Psy': \r\n\t\t\tcolor = 'deep-purple darken-2'; \r\n\t\t\tbreak; \r\n\t\tcase 'Electrik': \r\n\t\t\tcolor = 'lime accent-1'; \r\n\t\t\tbreak; \r\n\t\tcase 'Combat': \r\n\t\t\tcolor = 'deep-orange'; \r\n\t\t\tbreak; \r\n\t\tdefault: \r\n\t\t\tcolor = 'grey'; \r\n\t\t\tbreak; \r\n\t}\r\n\r\n\treturn `chip ${color}`;\r\n}\r\n\r\nexport default formatType;","import React, { FunctionComponent, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatDate from '../helpers/format-date';\r\nimport formatType from '../helpers/format-type';\r\nimport './pokemon-card.css';\r\n\r\ntype Props = {\r\n  pokemon: Pokemon,\r\n  borderColor?: string\r\n};\r\n\r\nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor = '#009688'}) => {\r\n \r\n  const [color, setColor] = useState<string>();\r\n  const history = useHistory();\r\n \r\n  const showBorder = () => {\r\n    setColor(borderColor);\r\n  };\r\n \r\n  const hideBorder = () => {\r\n    setColor('#f5f5f5');\r\n  };\r\n\r\n  const goToPokemon = (id: number) => {\r\n    history.push(`/pokemons/${id}`);\r\n  }\r\n \r\n  return (\r\n    <div className=\"col s6 m4\" onMouseEnter={showBorder} onMouseLeave={hideBorder} onClick={() => goToPokemon(pokemon.id)}>\r\n      <div className=\"card horizontal\" style={{ borderColor: color }}>\r\n        <div className=\"card-image\"> \r\n          <img src={pokemon.picture} alt={pokemon.name}/>\r\n        </div>\r\n        <div className=\"card-stacked\">\r\n          <div className=\"card-content\">\r\n            <p>{pokemon.name}</p>\r\n            <p><small>{formatDate(pokemon.created)}</small></p>\r\n            {pokemon.types.map(type => (\r\n              <span key={type} className={formatType(type)}>{type}</span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div> \r\n    </div>\r\n  );\r\n}\r\n \r\nexport default PokemonCard;","import Pokemon from './pokemon';\r\n   \r\nexport const POKEMONS: Pokemon[] = [\r\n {\r\n  id: 1,\r\n  name: \"Bulbizarre\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\r\n  types: [\"Plante\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 2,\r\n  name: \"Salamèche\",\r\n  hp: 28,\r\n  cp: 6,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 3,\r\n  name: \"Carapuce\",\r\n  hp: 21,\r\n  cp: 4,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\r\n  types: [\"Eau\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 4,\r\n  name: \"Aspicot\",\r\n  hp: 16,\r\n  cp: 2,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\r\n  types: [\"Insecte\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 5,\r\n  name: \"Roucool\",\r\n  hp: 30,\r\n  cp: 7,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 6,\r\n  name: \"Rattata\",\r\n  hp: 18,\r\n  cp: 6,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 7,\r\n  name: \"Piafabec\",\r\n  hp: 14,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 8,\r\n  name: \"Abo\",\r\n  hp: 16,\r\n  cp: 4,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\r\n  types: [\"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 9,\r\n  name: \"Pikachu\",\r\n  hp: 21,\r\n  cp: 7,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\r\n  types: [\"Electrik\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 10,\r\n  name: \"Sabelette\",\r\n  hp: 19,\r\n  cp: 3,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 11,\r\n  name: \"Mélofée\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\r\n  types: [\"Fée\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 12,\r\n  name: \"Groupix\",\r\n  hp: 17,\r\n  cp: 8,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n }\r\n];\r\n  \r\nexport default POKEMONS;","import Pokemon from \"../models/pokemon\";\r\nimport POKEMONS from \"../models/mock-pokemon\";\r\n  \r\nexport default class PokemonService {\r\n  \r\n  static pokemons:Pokemon[] = POKEMONS;\r\n  \r\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\r\n  \r\n  static getPokemons(): Promise<Pokemon[]> {\r\n    if(this.isDev) {\r\n      return fetch('http://localhost:3001/pokemons')\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {\r\n      resolve(this.pokemons);\r\n    });\r\n  }\r\n  \r\n  static getPokemon(id: number): Promise<Pokemon|null> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${id}`)\r\n      .then(response => response.json())\r\n      .then(data => this.isEmpty(data) ? null : data)\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\r\n    }); \r\n  }\r\n  \r\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {\r\n      const { id } = pokemon;\r\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\r\n      this.pokemons[index] = pokemon;\r\n      resolve(pokemon);\r\n    }); \r\n  }\r\n  \r\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      const { id } = pokemon;\r\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\r\n      resolve({});\r\n    }); \r\n  }\r\n  \r\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    pokemon.created = new Date(pokemon.created);\r\n  \r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      this.pokemons.push(pokemon);\r\n      resolve(pokemon);\r\n    }); \r\n  }\r\n  \r\n  static searchPokemon(term: string): Promise<Pokemon[]> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\r\n      resolve(results);\r\n    });\r\n  \r\n  }\r\n  \r\n  static isEmpty(data: Object): boolean {\r\n    return Object.keys(data).length === 0;\r\n  }\r\n  \r\n  static handleError(error: Error): void {\r\n    console.error(error);\r\n  }\r\n}","import React, { FunctionComponent, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonService from '../services/pokemon-service';\r\n \r\nconst PokemonSearch: FunctionComponent = () => {\r\n  \r\n  const [term, setTerm] = useState<string>('');\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n \r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const term = e.target.value;\r\n    setTerm(term);\r\n \r\n    if(term.length <= 1) {\r\n      setPokemons([]);\r\n      return;\r\n    }\r\n \r\n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\r\n  }\r\n  \r\n  return (\r\n    <div className=\"row\"> \r\n    <div className=\"col s12 m6 offset-m3\"> \r\n      <div className=\"card\"> \r\n      <div className=\"card-content\"> \r\n        <div className=\"input-field\"> \r\n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} /> \r\n        </div> \r\n        <div className='collection'>\r\n        {pokemons.map((pokemon) => (\r\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\r\n            {pokemon.name}\r\n          </Link>\r\n        ))}\r\n        </div> \r\n      </div> \r\n      </div> \r\n    </div> \r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonSearch;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonCard from '../components/pokemon-card';\r\nimport PokemonService from '../services/pokemon-service';\r\nimport { Link } from 'react-router-dom';\r\nimport PokemonSearch from '../components/pokemon-search';\r\n// import { usePokemons } from '../hooks/usePokemons;\r\n  \r\nconst PokemonList: FunctionComponent = () => {\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n\r\n  useEffect(() => {\r\n    PokemonService.getPokemons().then(pokemons => setPokemons(pokemons));\r\n  }, []);\r\n\t\r\n\t//   const pokemons = usePokemons();\r\n\r\n  return (\r\n    <div>\r\n      <h4 className=\"center\">Bienvenue sur le Pokédex !</h4>\r\n      <div className=\"container\"> \r\n        <div className=\"row\"> \r\n        <PokemonSearch />\r\n        {pokemons.map(pokemon => (\r\n          <PokemonCard key={pokemon.id} pokemon={pokemon} />\r\n        ))}\r\n        </div>\r\n        <Link className=\"btn-floating btn-large waves-effect waves-light red z-depth-3\"\r\n        style={{position: 'fixed', bottom: '25px', right: '25px'}}\r\n        to=\"/pokemon/add\">\r\n        <i className=\"material-icons\">add</i>\r\n        </Link>\r\n      </div>\r\n    </div> \r\n  );\r\n}\r\n  \r\nexport default PokemonList;","import React, { FunctionComponent } from 'react';\r\n  \r\nconst Loader: FunctionComponent = () => {\r\n   \r\n  return (\r\n    <div className=\"preloader-wrapper big active\"> \r\n      <div className=\"spinner-layer spinner-blue\"> \r\n        <div className=\"circle-clipper left\"> \r\n          <div className=\"circle\"></div> \r\n        </div>\r\n        <div className=\"gap-patch\"> \r\n          <div className=\"circle\"></div> \r\n        </div><div className=\"circle-clipper right\"> \r\n          <div className=\"circle\"></div> \r\n        </div>\r\n      </div> \r\n   </div> \r\n  );\r\n}\r\n   \r\nexport default Loader;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { RouteComponentProps, Link } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonService from '../services/pokemon-service';\r\nimport formatDate from '../helpers/format-date';\r\nimport formatType from '../helpers/format-type';\r\nimport Loader from '../components/loader';\r\n  \r\ntype Params = { id: string };\r\n  \r\nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n    \r\n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\r\n  \r\n  useEffect(() => {\r\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\r\n  }, [match.params.id]);\r\n    \r\n  return (\r\n    <div>\r\n      { pokemon ? (\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m8 offset-m2\"> \r\n            <h2 className=\"header center\">{ pokemon.name }</h2>\r\n            <div className=\"card hoverable\"> \r\n              <div className=\"card-image\">\r\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\r\n                <Link to={`/pokemons/edit/${pokemon.id}`} className=\"btn btn-floating halfway-fab waves-effect waves-light\">\r\n                  <i className=\"material-icons\">edit</i>\r\n                </Link>\r\n              </div>\r\n              <div className=\"card-stacked\">\r\n                <div className=\"card-content\">\r\n                  <table className=\"bordered striped\">\r\n                    <tbody>\r\n                      <tr> \r\n                        <td>Nom</td> \r\n                        <td><strong>{ pokemon.name }</strong></td> \r\n                      </tr>\r\n                      <tr> \r\n                        <td>Points de vie</td> \r\n                        <td><strong>{ pokemon.hp }</strong></td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Dégâts</td> \r\n                        <td><strong>{ pokemon.cp }</strong></td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Types</td> \r\n                        <td>\r\n                          {pokemon.types.map(type => (\r\n                           <span key={type} className={formatType(type)}>{type}</span>\r\n                          ))}</td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Date de création</td> \r\n                        <td>{formatDate(pokemon.created)}</td> \r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                  <Link to=\"/\">Retour</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\"><Loader /></h4>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonsDetail;","import React, { FunctionComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n  \r\nconst PageNotFound: FunctionComponent = () => {\r\n  \r\n  return (\r\n    <div className=\"center\">\r\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\r\n      <h1>Hey, cette page n'existe pas !</h1> \r\n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\r\n        Retourner à l'accueil\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PageNotFound;","import React, { FunctionComponent, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatType from '../helpers/format-type';\r\nimport PokemonService from '../services/pokemon-service';\r\n\r\ntype Props = {\r\n  pokemon: Pokemon,\r\n  isEditForm: boolean\r\n};\r\n\r\ntype Field = {\r\n  value?: any,\r\n  error?: string,\r\n  isValid?: boolean\r\n};\r\n\r\ntype Form = {\r\n  picture: Field,\r\n  name: Field,\r\n  hp: Field,\r\n  cp: Field,\r\n  types: Field\r\n}\r\n\r\nconst PokemonForm: FunctionComponent<Props> = ({pokemon, isEditForm}) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const [form, setForm] = useState<Form>({\r\n    picture: { value: pokemon.picture },\r\n    name: { value: pokemon.name, isValid: true },\r\n    hp: { value: pokemon.hp, isValid: true },\r\n    cp: { value: pokemon.cp, isValid: true },\r\n    types: { value: pokemon.types, isValid: true }\r\n  });\r\n\r\n  const types: string[] = [\r\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\r\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\r\n  ];\r\n\r\n  const hasType = (type: string): boolean => {\r\n    return form.types.value.includes(type);\r\n  }\r\n\r\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const checked = e.target.checked;\r\n    let newField: Field;\r\n\r\n    if(checked) {\r\n      const newTypes: string[] = form.types.value.concat([type]);\r\n      newField = { value: newTypes };\r\n    } else {\r\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\r\n      newField = { value: newTypes };\r\n    }\r\n\r\n    setForm({...form, ...{ types: newField }});\r\n  }\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n    setForm({ ...form, ...newField});\r\n  }\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    // Validator url\r\n    if(isAddForm()) {\r\n\r\n      const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\r\n      const end = \".png\";\r\n\r\n      if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\r\n        const errorMsg: string = 'L\\'url n\\'est pas valide.';\r\n        const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false };\r\n        newForm = { ...newForm, ...{ picture: newField } };\r\n      } else {\r\n        const newField: Field = { value: form.picture.value, error: '', isValid: true };\r\n        newForm = { ...newForm, ...{ picture: newField } };\r\n      }\r\n    }\r\n\r\n    // Validator name\r\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\r\n      const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\r\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.name.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    }\r\n\r\n    // Validator hp\r\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\r\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\r\n      const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.hp.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    }\r\n\r\n    // Validator cp\r\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\r\n      const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\r\n      const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.cp.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\r\n  }\r\n\r\n  const isTypesValid = (type: string): boolean => {\r\n    if (form.types.value.length === 1 && hasType(type)) {\r\n      return false;\r\n    }\r\n    if (form.types.value.length >= 3 && !hasType(type)) { \r\n      return false; \r\n    } \r\n    return true;\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if(isFormValid) {\r\n      pokemon.picture = form.picture.value;\r\n      pokemon.name = form.name.value;\r\n      pokemon.hp = form.hp.value;\r\n      pokemon.cp = form.cp.value;\r\n      pokemon.types = form.types.value;\r\n      isEditForm ? updatePokemon() : addPokemon();\r\n    }\r\n  }\r\n\r\n  const deletePokemon = () => {\r\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\r\n  }\r\n\r\n  const isAddForm = (): boolean => {\r\n    return !isEditForm;\r\n  }\r\n\r\n  const addPokemon = () => {\r\n    PokemonService.addPokemon(pokemon).then(() => history.push(`/pokemons`));\r\n  }\r\n\r\n  const updatePokemon = () => {\r\n    PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\"> \r\n            {isEditForm && (\r\n            <div className=\"card-image\">\r\n              <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\r\n              <span className=\"btn-floating halfway-fab waves-effect waves-light\">\r\n                <i onClick={deletePokemon} className=\"material-icons\">delete</i>\r\n              </span>\r\n            </div>\r\n            )}\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Pokemon picture */}\r\n                {isAddForm() && (\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Image</label>\r\n                    <input id=\"picture\" type=\"text\" name=\"picture\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\r\n                    {/* error */}\r\n                    {form.picture.error &&\r\n                      <div className=\"card-panel red accent-1\"> \r\n                    {form.picture.error} \r\n                  </div>} \r\n                </div>\r\n                )}\r\n                {/* Pokemon name */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Nom</label>\r\n                  <input id=\"name\" type=\"text\" name=\"name\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.name.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.name.error} \r\n                  </div>} \r\n                </div>\r\n                {/* Pokemon hp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"hp\">Point de vie</label>\r\n                  <input id=\"hp\" type=\"number\" name=\"hp\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.hp.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.hp.error}\r\n                  </div>} \r\n                </div>\r\n                {/* Pokemon cp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cp\">Dégâts</label>\r\n                  <input id=\"cp\" type=\"number\" name=\"cp\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.cp.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.cp.error}\r\n                  </div>} \r\n                </div>\r\n                {/* Pokemon types */}\r\n                <div className=\"form-group\">\r\n                  <label>Types</label>\r\n                  {types.map(type => (\r\n                    <div key={type} style={{marginBottom: '10px'}}>\r\n                      <label>\r\n                        <input id={type} type=\"checkbox\" name=\"types\" className=\"filled-in\" value={type} checked={hasType(type)} disabled={!isTypesValid(type)} onChange={e => selectType(type, e)}></input>\r\n                        <span>\r\n                          <p className={formatType(type)}>{ type }</p>\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n \r\nexport default PokemonForm;\r\n","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport PokemonForm from '../components/pokemon-form';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonService from '../services/pokemon-service';\r\nimport Loader from '../components/loader';\r\n \r\ntype Params = { id: string };\r\n  \r\nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n    \r\n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\r\n  \r\n  useEffect(() => {\r\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\r\n  }, [match.params.id]);\r\n    \r\n  return (\r\n    <div>\r\n      { pokemon ? (\r\n        <div className=\"row\">\r\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\r\n            <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\"><Loader /></h4>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonEdit;","export default class Pokemon {\r\n    // 1. Typage des propiétés d'un pokémon.\r\n    id: number;\r\n    hp: number;\r\n    cp: number;\r\n    name: string;\r\n    picture: string;\r\n    types: Array<string>;\r\n    created: Date;\r\n     \r\n    // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\r\n    constructor(\r\n     id: number,\r\n     hp: number = 100,\r\n     cp: number = 10,\r\n     name: string = '...',\r\n     picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/XXX.png',\r\n     types: Array<string> = ['Normal'],\r\n     created: Date = new Date()\r\n    ) {\r\n     // 3. Initialisation des propiétés d'un pokémons.\r\n     this.id = id;\r\n     this.hp = hp;\r\n     this.cp = cp;\r\n     this.name = name;\r\n     this.picture = picture;\r\n     this.types = types;\r\n     this.created = created;\r\n    }\r\n   }","import React, { FunctionComponent, useState } from 'react';\r\nimport PokemonForm from '../components/pokemon-form';\r\nimport Pokemon from '../models/pokemon';\r\n\r\nconst PokemonAdd: FunctionComponent = () => {\r\n\tconst [id] = useState<number>(new Date().getTime());\r\n\tconst [pokemon] = useState<Pokemon>(new Pokemon(id));\r\n\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t<h2 className=\"header center\">Ajouter un pokémon</h2>\r\n\t\t\t<PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default PokemonAdd;","export default class AuthenticationService {\r\n    static isAuthenticated: boolean = false;\r\n\r\n    static login(username: string, password: string): Promise<boolean> {\r\n        const isAuthenticated = (username === 'pikachu' && password === 'pikachu');\r\n\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                this.isAuthenticated = isAuthenticated;\r\n                resolve(isAuthenticated);\r\n            }, 1000);\r\n        });\r\n    }\r\n}","import React, { FunctionComponent, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthenticationService from '../services/authentication-service';\r\n\r\ntype Field = {\r\n  value?: any,\r\n  error?: string,\r\n  isValid?: boolean\r\n};\r\n\r\ntype Form = {\r\n  username: Field,\r\n  password: Field\r\n}\r\n\r\nconst Login: FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n\r\n  const [form, setForm] = useState<Form>({\r\n    username: { value: '' },\r\n    password: { value: '' },\r\n  });\r\n\r\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (pikachu / pikachu)');\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n    setForm({ ...form, ...newField});\r\n  }\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    // Validator username\r\n    if(form.username.value.length < 3) {\r\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\r\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    }\r\n\r\n    // Validator password\r\n    if(form.password.value.length < 6) {\r\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\r\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n\r\n    return newForm.username.isValid && newForm.password.isValid;\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if(isFormValid) {\r\n      setMessage('👉 Tentative de connexion en cours ...');\r\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\r\n        if(!isAuthenticated) {\r\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\r\n          return;\r\n        }\r\n        \r\n        history.push('/pokemons');\r\n        \r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\">\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Form message */}\r\n                {message && <div className=\"form-group\">\r\n                  <div className=\"card-panel grey lighten-5\">\r\n                    {message}\r\n                  </div>\r\n                </div>}\r\n                {/* Field username */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Identifiant</label>\r\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.username.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.username.error} \r\n                  </div>} \r\n                </div>\r\n                {/* Field password */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Mot de passe</label>\r\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.password.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.password.error} \r\n                  </div>} \r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n \r\nexport default Login;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthenticationService from './services/authentication-service';\r\n  \r\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\r\n  <Route {...rest} render={(props) => {\r\n    const isAuthenticated = AuthenticationService.isAuthenticated;\r\n    if (!isAuthenticated) {    \r\n      return <Redirect to={{ pathname: '/login' }} />\r\n    }\r\n  \r\n    return <Component {...props} />\r\n  }} />\r\n);\r\n  \r\nexport default PrivateRoute;","import React, { FunctionComponent } from 'react';\r\nimport PokemonList from './pages/pokemon-list';\r\nimport PokemonsDetail from './pages/pokemon-detail';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport PageNotFound from './pages/page-not-found';\r\nimport PokemonEdit from './pages/pokemon-edit';\r\nimport PokemonAdd from './pages/pokemon-add';\r\nimport Login from './pages/login';\r\nimport PrivateRoute from './PrivateRoute';\r\n  \r\nconst App: FunctionComponent = () => {\r\n\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div>\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<div className=\"nav-wrapper teal\">\r\n\t\t\t\t\t\t<Link to=\"/\" className=\"brand-logo center\">Pokédex</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</nav>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<PrivateRoute exact path=\"/\" component={PokemonList} />\r\n\t\t\t\t\t<Route exact path=\"/login\" component={Login} />\r\n\t\t\t\t\t<PrivateRoute exact path=\"/pokemons\" component={PokemonList} />\r\n\t\t\t\t\t<PrivateRoute exact path=\"/pokemon/add\" component={PokemonAdd} />\r\n\t\t\t\t\t<PrivateRoute exact path=\"/pokemons/edit/:id\" component={PokemonEdit} />\r\n\t\t\t\t\t<PrivateRoute exact path=\"/pokemons/:id\" component={PokemonsDetail} />\r\n\t\t\t\t\t<Route component={PageNotFound} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t)\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render (\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}